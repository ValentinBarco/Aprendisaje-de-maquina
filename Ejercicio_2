{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Ejercicio 2 AdM",
      "provenance": [],
      "authorship_tag": "ABX9TyMfRHa0iyoDDMsFq2li0mzJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ValentinBarco/Aprendisaje-de-maquina/blob/master/Ejercicio_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2cDHhhMwrK74"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QcKmABCPsU7m",
        "outputId": "434a041b-f40a-48d8-edce-196039bfb5d3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "mediaA = 50;\n",
        "mediaB = 30;\n",
        "muestras = 50;\n",
        "desvioA = 5.0;\n",
        "desvioB = 1.5;\n",
        "\n",
        "np.random.seed(1);\n",
        "A = pd.DataFrame(np.random.normal(loc= mediaA, scale=desvioA, size=muestras), columns=['A']);\n",
        "print(A);\n",
        "B = pd.DataFrame(np.random.normal(loc=mediaB, scale=desvioB, size=muestras), columns=['B']);\n",
        "print(B);\n",
        "A;\n",
        "B;"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "            A\n",
            "0   58.121727\n",
            "1   46.941218\n",
            "2   47.359141\n",
            "3   44.635157\n",
            "4   54.327038\n",
            "5   38.492307\n",
            "6   58.724059\n",
            "7   46.193965\n",
            "8   51.595195\n",
            "9   48.753148\n",
            "10  57.310540\n",
            "11  39.699296\n",
            "12  48.387914\n",
            "13  48.079728\n",
            "14  55.668847\n",
            "15  44.500544\n",
            "16  49.137859\n",
            "17  45.610708\n",
            "18  50.211069\n",
            "19  52.914076\n",
            "20  44.496904\n",
            "21  55.723619\n",
            "22  54.507954\n",
            "23  52.512472\n",
            "24  54.504280\n",
            "25  46.581361\n",
            "26  49.385549\n",
            "27  45.321153\n",
            "28  48.660560\n",
            "29  52.651777\n",
            "30  46.541696\n",
            "31  48.016232\n",
            "32  46.564136\n",
            "33  45.773972\n",
            "34  46.643769\n",
            "35  49.936677\n",
            "36  44.413448\n",
            "37  51.172078\n",
            "38  58.299011\n",
            "39  53.710221\n",
            "40  49.040822\n",
            "41  45.561855\n",
            "42  46.264209\n",
            "43  58.462273\n",
            "44  50.254039\n",
            "45  46.815022\n",
            "46  50.954577\n",
            "47  60.501276\n",
            "48  50.600795\n",
            "49  53.086016\n",
            "            B\n",
            "0   30.450255\n",
            "1   29.471625\n",
            "2   28.286223\n",
            "3   29.475986\n",
            "4   29.686659\n",
            "5   30.879935\n",
            "6   31.258475\n",
            "7   31.396653\n",
            "8   30.428381\n",
            "9   31.327712\n",
            "10  28.868403\n",
            "11  31.879302\n",
            "12  30.769395\n",
            "13  29.552861\n",
            "14  30.732777\n",
            "15  29.886642\n",
            "16  31.697444\n",
            "17  32.279725\n",
            "18  33.278363\n",
            "19  27.905255\n",
            "20  27.833829\n",
            "21  29.243301\n",
            "22  30.240056\n",
            "23  31.314253\n",
            "24  30.473452\n",
            "25  26.966698\n",
            "26  29.540694\n",
            "27  31.241962\n",
            "28  30.345142\n",
            "29  31.143017\n",
            "30  29.666508\n",
            "31  29.698863\n",
            "32  30.279842\n",
            "33  30.615077\n",
            "34  30.297450\n",
            "35  30.178513\n",
            "36  28.994007\n",
            "37  30.566346\n",
            "38  30.182732\n",
            "39  31.694226\n",
            "40  31.798377\n",
            "41  30.277735\n",
            "42  29.437073\n",
            "43  29.041904\n",
            "44  30.635242\n",
            "45  30.116010\n",
            "46  29.484219\n",
            "47  30.065395\n",
            "48  29.069999\n",
            "49  31.047048\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XoE4524oyrdp",
        "outputId": "a13f6bdb-9f7c-4ee6-cd61-8b40ff842ca7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 734
        }
      },
      "source": [
        "sns.pairplot(A, diag_kind=\"kde\");\n",
        "sns.pairplot(B, diag_kind=\"kde\");\n",
        "Grafico = pd.concat([A,B],ignore_index= True,axis=0);\n",
        "sns.pairplot(Grafico,diag_kind=\"kde\");\n"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAALQAAAC0CAYAAAA9zQYyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAVlklEQVR4nO2deXSV5Z3HP7+bECAJIXsIISFgAmGpgEZEQVSo1jqodbppqzPjaWvndBl72s6Mnc60PZ1pa2tPl2ntYmtHR8eqRauiFFyKU1FAgsi+mGASloQsZN+X3/zx3jgxkJX7rvf5nHPPzXvf577v9yTf8+T3PM/v/T2iqhgMQSHktgCDIZIYQxsChTG0IVAYQxsChTG0IVAYQxsChW2GFpHfiUiNiOwf5ryIyH+KSKmI7BWRi+zSYoge7OyhHwSuG+H8B4HC8OtO4Jc2ajFECbYZWlX/ApwZoclNwH+rxXYgWUSy7dJjiA7cjKFzgOODjk+EPzsLEblTREpEpGTRokUKmJd5nRNfDApV9X5VLVbV4qlTp7otx+Bh3DT0SSB30PGs8GcGw4Rx09DPAn8Tnu1YATSpapWLegwBINauC4vI74GrgHQROQF8E5gEoKq/AjYC1wOlQDtwh11aDNGDbYZW1VtHOa/A5+26vyE68cWgMNro6u3jpYOn2Xui0W0pvsO2HtowMZo6evj4r7cRExJqW7pYd2E2/7ZuISLitjRfYAztMb7xzH5yU+O54/J82rv7+M7GQ8zNqOC2FfluS/MFJuTwEIeqmnn17To+sTwPESFhciyfv7qAezcfpaa50215vsAY2kP8bus7XLswiymTYt79LCd5KqsL0/nxS0ddVOYfjKE9Qkd3H3/aX82V8zLOOrduyUye21tFdZPppUfDGNojbDlSQ0FmIsnxcWedS5oyiZUF6Tz0ernzwnyGMbRH2LS/movykoc9f+2CLB7bWUlXb5+DqvyHMbQH6O9XXn27lqW5wxs6O3kquSnxvHDgtIPK/IcxtAc4VN1MfFwsGdOmjNjuinkZPLaz0iFV/sQY2gPsOHaGhTOnjdpueX4qe443cdpM4Q2LMbQH2HasnnlZSaO2i4sNsXxOCs+8ZbJsh8MY2mVUlTcrGpiflTim9ivmpvPMW6dsVuVfjKFd5lRTJ/2qpCdOHlP7RdlJnGrsoLyuzWZl/sQY2mX2HG+kMDNxzMlHoZCwfE4qz+8zvfS5MIZ2mb0nGpmdljCu7yyfk2bCjmEwhnaZvSeayB+noYuyplHT0mXCjnNgq6FF5DoRORKujnT3Oc7nicgWEdkdrp50vZ16vIaqcvBUM/np4zN0KCQsz0/lT/vNI5hDsbMUWAxwH1aFpIXArSKycEizfwWeUNVlwC3AL+zS40VqW7pQICV+0ri/W5yfynN7jaGHYmcPvRwoVdVjqtoNPIZVLWkwCgxMwE4HoiowPFTdwuy0+Ak9jbIwO4njZ9o52dhhgzL/Yqehx1IZ6VvAbeGnwjcCX7RRj+c4XNXMrJSJFc6JCQnF+Sls3l8dYVX+xu1B4a3Ag6o6C6ukwcMicpamwaXAamtrHRdpFwermpmVHD/h71+cl8rz+0zYMRg7DT2WykifAp4AUNVtwBQgfeiFBpcCy8g4OwHer7x9uoWcCfbQAItzpnOkuoW61q4IqvI3dhp6J1AoInNEJA5r0PfskDaVwFoAEVmAZejgdMEj0N+vHKtrm3DIAVZux5Lc6bx40KSUDmBnOd1e4AvAZuAQ1mzGARH5tojcGG72FeAzIrIH+D3wdxolGyeebOwgcXIs8XHn9+D9xXmpPLc3qsbSI2JrGQNV3Yg12Bv82TcG/XwQWGmnBq9SVtvKrJSJx88DLMtL5oGtx2jq6GH61PFP/wUNtweFUUtZbRszpo+c0D8WpkyKYVHOdF4yYQdgDO0ab59uITvp/A0NUDw7xYQdYYyhXaK0tjUiPTTARXkp7HjnDC2dPRG5np8xhnaJ8ro2ZiZHZjeChMmxLMhO4s+HayJyPT9jDO0CrV29tHT2kppwdg2OiXJJfgob9phFFmNoFxjonUMRrCh68exUtpXV0drVG7Fr+hFjaBc4VheZGY7BJIbDjmif7TCGdoHyujYyp43tGcLxcEl+Kk/vju4nwo2hXaCstpWsCE3ZDaY4P4Wd5Wdoao/e2Q5jaBcor2tjhg2Gjo+L5X2zprPpQPQODo2hXaDyTLstPTTAirlpPPVm9IYdxtAO09rVS3t334QeuxoLy3JTOFjVHLXlwoyhHaaivo3s6VNs2wQoLjbEJfnRWy7MGNphKurtCzcGuGxuOk9GadhhDO0wFfXtZNgwZTeYhTOTONPaxeHqZlvv40WMoR2mvK7NdkOHRFhZkM76XSdsvY8XMYZ2mPL6NrJGKWweCVYVZvD07pP09vXbfi8vYQztMMdtnLIbTE7yVFIT4nj17Trb7+UlXC0FFm7zMRE5KCIHRORRO/W4TU9fP7WtXaQnRi7LbiRWFWTw+M7jozcMEK6WAhORQuBrwEpVXQR8yS49XuBUYwdpCXHExjjzj/HyC9LYWlpHQ1u3I/fzAm6XAvsMcJ+qNgCoaqAz1Cvq28l0INwYIGFyLMvykvnj7ugZHLpdCmweME9EXhOR7SJy3bkuFJTKSZVn2m3JshuJ1YUZPLbzOFFSHcL1QWEsUAhchVUW7DcictZmfUGpnFRZ307aGLeeiBQLZybR3NHLvpNNjt7XLdwuBXYCeFZVe1T1HeAolsEDSXm9PXnQIxES4cp5GfzPjujY39DtUmBPY/XOiEg6VghyzEZNrmJnlt1IrJ6Xwca9VbRFweNZbpcC2wzUi8hBYAvwj6pab5cmN1FVjjc4H0MDpCbEsSA7iQ17gl+7w+1SYAp8OfwKNE0dPaDWs39ucOX8DB7eXsEty/Ncub9TuD0ojBoGwg270kZHY+msZGpautgf8MGhMbRDuBU/DxAKCVfPz+CR7RWuaXACY2iHqDzT7tiS93BcNT+T5/dWBbpkmDG0Q5TX2Z8HPRop8XEszkkKdKkDY2iHqKhvI9OBtNHRWFOUxUPbKgK7cjhuQ4vIKhG5zw4xQeZ4QweZSe720ACLZibR1dPHjnfOuC3FFsZkaBFZJiL3ikg58O/AYVtVBYyevn5qWzrJcHjZ+1yICGsXZPHga+VuS7GFYQ0tIvNE5Jsichj4GdYGP6KqV6vqzxxTGABONXaQ6mDa6GhcUZjOa2V1nArgpp0j/YYPA2uAdaq6KmziPmdkBQu3p+yGEh8Xy6qCdB7eFrwpvJEM/ddAFbBFRH4jImsBd1YFfE5FvTtL3iNxzcIsfv9GJR3dweqjhjW0qj6tqrcARVh5Fl8CMkXklyJyrVMCg0B5fRvpHoifB5M9fSqFWYmsfzNYyf+jBnWq2qaqj6rqDVgpoLuBf7ZdWYAor2vzVMgxwAcXZ3P/X8ro6w/OFN64Rimq2hBOtl9rl6Ag4kS1pIlQNGMaUyfF8MKBarelRAxvDLsDjKpyoqHDczE0WFN46943k59vKQ3MQosxtM3UtnYRFxsiwaW00dG4OD+F5s6ewNTvMIa2mYr6drIjvJ9KJAmJcOOSHH7y0tFA9NLG0Dbj1QHhYC6fm8bpli5eK/X/w0KuV04Kt/uwiKiIFNupxw3K6+0vzni+hELCzUtz+MGmw77vpV2tnBRuNw24C9hhlxY3Kav1fg8NcNkFaTR39vCiz7eFc7tyEljJTt8HArmHQnldm6dj6AFCInz04lzu2XTY1/PSrlZOEpGLgFxVfX6kC/m1cpKqUnmm3ZYdr+xgWV4yUyfFsH6Xfws8ujYoFJEQ8CPgK6O19WvlpNqWLibFeHfKbigiwi2X5PHDzUd9W8PDzcpJ04DFwCvhPOsVwLNBGhiW1Vp7evuJgsxE5s+Yxq//t8xtKRPCtcpJqtqkqumqmq+q+cB24EZVLbFRk6Mcq2v1Rfw8lI8V5/Lg6+VUN/lvWON25aRAU1bTSpbHp+zORca0yawpyuTezf57MMnVyklDPr/KTi1uUFrbRvHsFLdlTIgblszkq3/Yw6GqZhZkJ7ktZ8yYlUIbKatpJcdnMfQA8XGx3LQ0h+8+f8htKePCGNomOnv6qG3t8sWiynCsLcqktLaVbWX+WRI3hraJY7VtZCdNISbk36fWYmNC3Lwsh+/7aEncGNomSmtbmZniz3BjMCsvSKe+tcs36aXG0DZxtLqFmT6cshtKKCTctDSHH/skvdQY2iYOVTeTkxzvtoyIcNncNE43d/KGD6otGUPbxNHqFnJT/R9ygNVLX/++bO7b4v3VQ2NoG2jv7uV0SxczAhByDHBFQQb7Tjby9ukWt6WMiDG0DRypbiE3ZSqxoeD8euNiQ6wtyuSBre+4LWVEgvMb9xCHq1vITQ1G/DyYtQuyeH5vlbVfjEcxhraB/SebyE0JnqGT4+NYkpvM+hLv5ksbQ9vAvhNN5KcnuC3DFtYUZfLI9krPTuEZQ0eY3r5+jta0kJ8WvB4arGpLfdrv2Sk8Y+gIU1rbSlrCZOLj/PGUyngREa6cl8mjb3hzq2Vj6AjzVmUjBZmJbsuwlVUF6bx8qIZmD+6mZQwdYXZVNDAnoPHzAElTJ7E4J4nn9lS5LeUsjKEjzJuVDYHvoQFWFWTw+E7vhR2uVk4SkS+LyEER2SsiL4vIbDv12E1jezdVTZ3kpwW7hwZYkjudyjPtHKttdVvKe3C7ctJuoFhVLwTWAz+wS48TlJQ3MC9rmq9zoMdKbCjE5QXpPLnLWzsAuFo5SVW3qGp7+HA7VqkD37K1tI75M6a5LcMxVhWk89Tuk/R7qNKSq5WThvAp4E826rGd10rrWOSjB0rPl9mp8UyODfFGuXfmpD0xKBSR24Bi4N5hznu+FFh1UyfVzZ3MzQj+gHAAEWFlQTrrS7wTdrhZOQkAEXk/8HWsIjNd57qQH0qBbTlSw5JZyVERPw/m8gvS2Xywms4eb2wP51rlJLC2XAZ+jWXmGhu12M7GfVUsy0t2W4bjpCbEUZCZyGaPbDzkduWke4FE4A8i8paIPDvM5TxNY3s3uyoaWJbrz6Iy58vKC9J5fKc3MvBcrZykqu+38/5OsWFvFUtzk5kaF+O2FFe4JD+Vh7ZZtfDcfkrHE4NCP6OqPLqjgisK092W4hpxsSEunZPKk2+630sbQ58nJRUNNHX0cOGs6IufB7O6MIPHd55wPU/aGPo8+cmLR7l+cTYhia7ZjaEM5K/scDlP2hj6PNhypIby+naunOfNqUQnERGump/BI9srXNVhDD1Bmtp7+Jen9nH7itnExphfI1ilDl45Ukt96zmXExzB/CUmQHdvP597dBdLc5NZkhvdsfNgEqfEckl+iqtTeMbQ46S1q5dPP7STnj7lk5f6OtvVFq5ZOIOHtpXT09fvyv2NocfBrooGrv/pq0yeFMMX1xRE3TL3WJiTnkB64mQ27nPnaZZgPskZYZrae7hn0yFeOHCa21fM5tK5aW5L8jTXL87mF6+UceOSmYjDsz+mhx6FjfuqWPujV6hv7eaeD19ozDwGluUl093bz8uHnE/PMT30MLR19fL1P+5nZ/kZvrimkHlZ0ZO4f76ICDctnckPXzjCmqJMQg6GZqaHPgcV9W3c+POtNHZ08x8fWmzMPAGW56fS169s2HvK0fsaQw9hx7F6bv7F61w5P4PPrr6AKZOiM+HofBERPrE8j+9uPER7t3PbLBtDD2LDnlN89pFdfHb1XK5ZMMNtOb6nKDuJohlJ/GDTEcfuaQyNlTH3q1fK+PaGA9x9XVHUJxpFkk9emseGPad4vdSZTYei3tA9ff3c/dQ+HttZyTdvWMTsKKip4STTpkziztVz+YfHdnOqscP2+0W1oU83d3LL/ds5VtvKN9YtIi3Rf/ty+4ELZyVz3eIZ3P7ADtvzPKLS0KrKxn1VfPCnr3JBRgJfev+8qH3axCmuX5zNklnJfPRX26isbx/9CxPE7VJgk0Xk8fD5HSKSb6cesIqR3/7AG3xv4yHuWlvIzctmRX0usxOICB8tzuXK+RnceN9WHt9ZaUuBGrHrCYNwKbCjwDVYRWZ2Areq6sFBbT4HXKiqfy8itwA3q+rHR7pucXGxlpSUjEtLTUsnWw7X8ETJCSrq21h34UzWFmWatE+XKK9v46HXy+nu6+eOy/P5wOIZZE4b97OI5+yF7DT0ZcC3VPUD4eOvAajq9wa12Rxus01EYoFqIENHEDWcoTftr2b/ySZau3ppbO+murmLivo2qpo6AchKmsyKuWlclJdCrEkqch0FDpxs4pWjte/+jWanxjM7LZ7MpCkkT51EwuRYblgyc7hqro4b+iPAdar66fDx7cClqvqFQW32h9ucCB+XhdvUDbnWncCd4cP5wHsnNkXIveuxpaHJCWcFwtrbo73NtZ1o5NIZVftjRULOrRZ4WEdENIRCEjs9a4qEzh7HNJc8U9Xw8m/OtdxYp6rXDf3QF7kcqno/cL/bOgYQkRJVLTY6nNDwV4znT+92KbB324RDjulAvY2aDAHH1VJg4eO/Df/8EeDPI8XPBsNo2BZyqGqviAyUAosBfjdQCgwoUdVngQeAh0WkFDiDZXo/4JXwxws6vKDhXWwbFBoMbmAmYg2BwhjaECiMoceAiMSIyG4ReS58PCe8VF8aXrqPc0BDuYjsC5cdLgl/lioiL4rI2+F3W+v5ikiyiKwXkcMickhELnNaw2gYQ4+Nu7BqXA/wfeDHqloANGDtD+MEV6vq0kHzvncDL6tqIfBy+NhOfgpsUtUiYAnW78RpDSOjquY1wgtr/vxlYA3wHNaSax0QGz5/GbDZAR3lQPqQz44A2eGfs4EjNt5/OvAO4YkENzSM5WV66NH5CfBPwMDaeRrQqNYOBTD67l6RQoEXRGRXOBUAIEtVByq6VANZNt5/DlAL/Fc4/PqtiCQ4rGFUjKFHQETWATWqusttLcAqVb0IayPTz4vI6sEn1eoi7ZyDjQUuAn6pqsuANoaEFw5oGBVj6JFZCdwoIuVYG4euwYojk8NL9TDM7l6RRlVPht9rgD9ibWx6WkSyAcLvdlZ2OQGcUNUd4eP1WAZ3UsOoGEOPgKp+TVVnqWo+1irmn1X1k8AWrKV6sJbun7FTh4gkiMi0gZ+Ba4H9vDd1wFYdqloNHBeR+eGP1gIHndQwFsxK4RgRkauAr6rqOhGZi9Vjp2LtV36bDrPHYoTuPRerVwbrX/+jqvodEUkDngDygArgY6pqWwl9EVkK/BaIA44Bd2B1io5pGFWjMbQhSJiQwxAojKENgcIY2hAojKENgcIY2hAojKF9hIh8SERURIrc1uJVjKH9xa3A1vC74RyYeWifICKJWJltVwMbVHX+KF+JSkwP7R9uwspFPgrUi8jFbgvyIsbQ/uFWrOV2wu8m7DgHJuTwASKSipXtVouVnhkTfp+t5g/4HkwP7Q8+AjysqrNVNV9Vc7GeHrnCZV2ewxjaH9zK/2fbDfAkJuw4CxNyGAKF6aENgcIY2hAojKENgcIY2hAojKENgcIY2hAojKENgeL/ACAPGjx0/B1iAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 180x180 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 180x180 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 6 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ugCmGZ-96uwO",
        "outputId": "d9d60685-3d57-42a2-bd1d-2a7149f7910b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 555
        }
      },
      "source": [
        "Grafico[0]"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2890\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2891\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2892\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 0",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-4-a39161787eb8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mGrafico\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2900\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2901\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2902\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2903\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2904\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2891\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2892\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2893\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2894\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2895\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mtolerance\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 0"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "08l57-Ki1r9A"
      },
      "source": [
        "valor_de_clasificacion_Naranjas = mediaA - 3*desvioA;\n",
        "valor_de_clasificacion_Mandarinas = mediaB + 3*desvioB;\n",
        "\n",
        "valor_de_clasificacion = (valor_de_clasificacion_Naranjas + valor_de_clasificacion_Mandarinas)/2\n",
        "\n",
        "prediccion = [True if  x < valor_de_clasificacion else False for x in Grafico[0]];\n",
        "\n",
        "es_naranja = [True if x == 'A' else False for x in Grafico[0]];\n",
        "\n",
        "\n",
        "#Verdadero_Positivo = (prediccion) & (es_naranja);\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}